---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: configure-deployer
spec:
  params:
    - name: deployer-namespace
      type: string
      default: "cloud-pak-deployer"
    - name: deployer-sa
      type: string
      default: "cpd-sa"
    - name: ibm-entitlement-key
      type: string
      default: ""
    - name: cloudpak
      type: string
      default: ""
    - name: file-storage
      type: string
      default: ocs-external-storagecluster-cephfs
    - name: block-storage
      type: string
      default: ocs-external-storagecluster-ceph-rbd
    - name: deployer-pvc
      type: string
      default: cloud-pak-deployer-pvc
    - name: overrides
      type: string
  workspaces:
    - name: shared-configuration
      volumeClaimTemplate:
        metadata:
          name: shared-config
        spec:
          accessModes: ["ReadWriteMany"]
          resources:
            requests:
              storage: 1Gi
  tasks:
    - name: create-namespace-for-cloud-pak-deployer
      displayName: Create Namespace For Cloud Pak Deployer
      taskRef:
        kind: Task
        name: create-namespace
      params:
        - name: namespace
          value: $(params.deployer-namespace)
    - name: create-sa-for-cp-deployer
      displayName: Create Service Account for Cloud Pak Deployer
      runAfter:
        - create-namespace-for-cloud-pak-deployer
      taskRef:
        kind: Task
        name: create-service-account
      params:
        - name: namespace
          value: $(params.deployer-namespace)
        - name: sa
          value: $(params.deployer-sa)
    - name: bind-scc-for-sa
      displayName: Bind the privileged SCC for the cloud pak deployer sa
      runAfter:
        - create-sa-for-cp-deployer
      taskRef:
        kind: Task
        name: create-scc-rolebinding
      params:
        - name: scc
          value: privileged
        - name: sa
          value: $(params.deployer-sa)
        - name: namespace
          value: $(params.deployer-namespace)
    - name: bind-cr-for-sa
      displayName: Bind the cluster admin privileges for cloud pak deployer sa
      runAfter:
        - bind-scc-for-sa
      taskRef:
        kind: Task
        name: create-cr-rolebinding
      params:
        - name: cr
          value: cluster-admin
        - name: sa
          value: $(params.deployer-sa)
        - name: namespace
          value: $(params.deployer-namespace)
    - name: get-tz-ibm-entitlement-key
      displayName: Get the TZ ibm entitlement key
      runAfter:
        - bind-cr-for-sa
      taskRef:
        kind: Task
        name: ibmcloud-secrets-manager-get
      params:
        - name: KEY_ID
          value: 968d7819-f2c5-7b67-c420-3c6bfd51521e
        - name: SECRETS_MANAGER_ENDPOINT_URL
          value: >-
            https://afa20521-cd75-4864-843f-e59fd0ffd49d.us-south.secrets-manager.appdomain.cloud
    - name: create-ibm-entitlement-secret
      displayName: Create the IBM Entitlement Secret for Cloud Pak Deployer
      runAfter:
        - get-tz-ibm-entitlement-key
      taskRef:
        kind: Task
        name: ibmcloud-secrets-manager-get
      params:
        - name: ibm-entitlement-key
          value: $(params.ibm-entitlement-key)
        - name: tz-ibm-entitlement-key
          value: $(tasks.get-tz-ibm-entitlement-key.results.secret-value)
        - name: namespace
          value: $(params.deployer-namespace)
    - name: prepare-cp4d-configmap
      displayName: Prepare cloud pak deployer configmap for cp4d
      runAfter:
        - create-ibm-entitlement-secret
      taskRef:
        kind: Task
        name: prepare-cp4d-configmap
      params:
        - name: overrides
          value: $(params.overrides)
      workspaces:
        - name: shared-workspace
          workspace: shared-configuration
      when:
        - input: $(params.cloudpak)
          operator: in
          values: ["cp4d"]
    - name: create-configmap
      displayName: Create the configmap to house metadata config for cloud pak deployer
      runAfter:
        - prepare-cp4d-configmap
      taskRef:
        kind: Task
        name: create-configmap
      params:
        - name: configmap
          value: cpd-config
        - name: namespace
          value: $(params.deployer-namespace)
        - name: result-path
          value: $(tasks.prepare-cp4d-configmap.results.output-file)
      workspaces:
        - name: shared-workspace
          workspace: shared-configuration
    - name: create-pvc
      displayName: Create the PVC for cloud pak deployer status files
      runAfter:
        - create-configmap
      taskRef:
        kind: Task
        name: create-pvc
      params:
        - name: pvc
          value: $(params.deployer-pvc)
        - name: namespace
          value: $(params.deployer-namespace)
        - name: sc
          value: $(params.file-storage)
        - name: accessmode
          value: ReadWriteMany
        - name: size
          value: 5Gi
    - name: run-cloud-pak-deployer
      displayName: Run the cloud pak deployer for CP4D
      runAfter:
        - create-pvc
      taskRef:
        kind: Task
        name: run-cloud-pak-deployer
      params:
        - name: configmap
          value: cpd-config
        - name: namespace
          value: $(params.deployer-namespace)
        - name: cloud-pak-deployer-version
          value: latest
        - name: status-pvc
    - name: deploy-cp4i
      displayName: Deploy Cloud Pak for Integration
      runAfter:
        - create-ibm-entitlement-secret
      taskRef:
        kind: Task
        name: deployer-cp4i-pipeline
      when:
        - input: $(params.cloudpak)
          operator: in
          values: ["cp4i"]
    - name: deploy-cp4ba
      displayName: Deploy Cloud Pak for Business Automation
      runAfter:
        - create-ibm-entitlement-secret
      taskRef:
        kind: Task
        name: deployer-cp4ba-pipeline
      when:
        - input: $(params.cloudpak)
          operator: in
          values: ["cp4ba"]
